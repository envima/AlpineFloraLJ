sort(unique(dat$locality))
sort(unique(dat$habitat))
sort(unique(dat$elevation))
#key <- name_suggest('Gentiana carinicostat')$key[1]
key <- name_backbone(name = "Saussurea_orgaadayi", kingdom = "plants")$speciesKey
dat <- occ_search(taxonKey = key,
return = "data",
limit = 500, hasCoordinate=TRUE)
#, fields = c('species','scientificName','decimalLatitude','decimalLongitude','country',"individualCount",  "family","genus",
# "stateProvince", "county","municipality","locality", "habitat","elevation","recordedBy","verbatimEventDate",  #"cooaintyInMeters", "year", "basisOfRecord", "institutionCode", "datasetName"), #'limit=500', "hasCoordinate = true","hasGeospatialIssue = false"))
#names(dat)
sort(unique(dat$country))
sort(unique(dat$stateProvince))
sort(unique(dat$county))
#sort(unique(dat$municipality))
sort(unique(dat$locality))
sort(unique(dat$habitat))
sort(unique(dat$elevation))
library(plotrix)
library(reshape2)
library(phytools)
library(geiger)
library(RColorBrewer)
require(colorspace)
require(scales)
library(devtools)
#install_github("GuangchuangYu/ggtree")
library(ggtree)
library(ape)
library(plotrix)
library(reshape2)
library(phytools)
library(geiger)
library(RColorBrewer)
require(colorspace)
require(scales)
library(devtools)
#install_github("GuangchuangYu/ggtree")
library(ggtree)
library(ape)
setwd("/Users/dingwenna/Nutstore Files/丁文娜/AlpineOrigin/dataset/Clades/Output/newalpine/Saxifragaceae/")
character_file = "Saxifragaceae.smap.tree"
#if (write_pdf) {
#    pdf("simmap.pdf")
#}
sim2 = read.simmap(file=character_file, format="phylip")
#label_fn = paste("state_labels.csv", sep=",")
color_fn = paste("range_colors.csv")
range_color_list = read.csv(color_fn, header=T, sep=",", colClasses="character")
#range_colors = range_color_list$color[ match(range_color_list$range, range_labels) ]
#range_labels = setNames(range_color_list$range,range_color_list$state)
#> range_labels
#10   01   11
#"A"  "N" "AN"
################################################
#names(summary(sim2))
colors = vector()
for (i in 1:length( sim2$maps ) ) {
colors = c(colors, names(sim2$maps[[i]]) )
}
colors = sort(as.numeric(unique(colors)))
#cols = setNames(rainbow_hcl(length(colors)), colors)
#cols = setNames( rainbow(length(colors), start=0.0, end=0.9), colors)
#cols = setNames( range_color_list$color[1:22], colors)
col=vector()
for (i in colors){
col=c(col,range_color_list$color[i])
}
cols = setNames( col, colors)
ranges = vector()
for (i in colors){
ranges =c(ranges,range_color_list$range[i] )
}
areas= setNames( ranges,colors)
#X<-read.csv("elopomorph.csv",row.names=1)
#feed.mode<-setNames(X[,1],rownames(X))
plotSimmap(sim2,cols,
fsize=.1, lwd=2, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-20,140),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .7)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,cex = 0.1, font = .1, col = "black",pos=c(0,0)) # plots timescale
title("Saxifragaceae")
p
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-20,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .7)
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .7)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,cex = 0.1, font = .1, col = "black",pos=c(0,0)) # plots timescale
title("Saxifragaceae")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .2)
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
#cex = 0.1,
font = .1, col = "black",pos=c(0,0)) # plots timescale
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
#cex = 0.1, font = .1,
col = "black",pos=c(0,0)) # plots timescale
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
axisPhylo?
axisPhylo()
help(axisPhylo)
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
#          cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
title("Saxifragaceae")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=TRUE, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
axisPhylo(side=1,las = .1,ask = FALSE,
lwd = .1,
#          cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
title("Saxifragaceae")
library(openssl)
library(rgeos)
library(devtools)
#devtools::install_github("ropensci/mapr")
#devtools::install_github("ropensci/rgbif")
library("mapr")
library("spocc")
library(rgbif)
library(sp)
#install.packages(("dplyr"))
library("dplyr")
library(raster)
#install.packages("dismo")
#install.packages("maptools")
library("dismo")
library("maptools")
library("ggplot2")
library("httr")
library("RColorBrewer")
library("wicket")
#install.packages("geonames")
library("geonames")
library(mapr)
library(readr)
library(openssl)
library(rgeos)
library(devtools)
#devtools::install_github("ropensci/mapr")
#devtools::install_github("ropensci/rgbif")
library("mapr")
library("spocc")
library(rgbif)
library(sp)
#install.packages(("dplyr"))
library("dplyr")
library(raster)
#install.packages("dismo")
#install.packages("maptools")
library("dismo")
library("maptools")
library("ggplot2")
library("httr")
library("RColorBrewer")
library("wicket")
#install.packages("geonames")
library("geonames")
library(mapr)
library(readr)
#key <- name_suggest('Gentiana carinicostat')$key[1]
key <- name_backbone(name = "Saxifraga_microgyna", kingdom = "plants")$speciesKey
#key <- name_suggest('Gentiana carinicostat')$key[1]
key <- name_backbone(name = "Saxifraga_microgyna", kingdom = "plants")$speciesKey
dat <- occ_search(taxonKey = key,
return = "data",
limit = 500, hasCoordinate=TRUE)
#, fields = c('species','scientificName','decimalLatitude','decimalLongitude','country',"individualCount",  "family","genus",
# "stateProvince", "county","municipality","locality", "habitat","elevation","recordedBy","verbatimEventDate",  #"cooaintyInMeters", "year", "basisOfRecord", "institutionCode", "datasetName"), #'limit=500', "hasCoordinate = true","hasGeospatialIssue = false"))
#names(dat)
sort(unique(dat$country))
sort(unique(dat$stateProvince))
sort(unique(dat$county))
#sort(unique(dat$municipality))
sort(unique(dat$locality))
sort(unique(dat$habitat))
sort(unique(dat$elevation))
#key <- name_suggest('Gentiana carinicostat')$key[1]
key <- name_backbone(name = "Saxifraga_komarovii", kingdom = "plants")$speciesKey
dat <- occ_search(taxonKey = key,
return = "data",
limit = 500, hasCoordinate=TRUE)
#, fields = c('species','scientificName','decimalLatitude','decimalLongitude','country',"individualCount",  "family","genus",
# "stateProvince", "county","municipality","locality", "habitat","elevation","recordedBy","verbatimEventDate",  #"cooaintyInMeters", "year", "basisOfRecord", "institutionCode", "datasetName"), #'limit=500', "hasCoordinate = true","hasGeospatialIssue = false"))
#names(dat)
sort(unique(dat$country))
sort(unique(dat$stateProvince))
sort(unique(dat$county))
#sort(unique(dat$municipality))
sort(unique(dat$locality))
sort(unique(dat$habitat))
sort(unique(dat$elevation))
#key <- name_suggest('Gentiana carinicostat')$key[1]
key <- name_backbone(name = "Bergenia_stracheyi", kingdom = "plants")$speciesKey
dat <- occ_search(taxonKey = key,
return = "data",
limit = 500, hasCoordinate=TRUE)
#, fields = c('species','scientificName','decimalLatitude','decimalLongitude','country',"individualCount",  "family","genus",
# "stateProvince", "county","municipality","locality", "habitat","elevation","recordedBy","verbatimEventDate",  #"cooaintyInMeters", "year", "basisOfRecord", "institutionCode", "datasetName"), #'limit=500', "hasCoordinate = true","hasGeospatialIssue = false"))
#names(dat)
sort(unique(dat$country))
sort(unique(dat$stateProvince))
sort(unique(dat$county))
#sort(unique(dat$municipality))
sort(unique(dat$locality))
sort(unique(dat$habitat))
sort(unique(dat$elevation))
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#ylim = c(0,490),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
#          cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,490),
direction="rightwards")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,90),
direction="rightwards")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,190),
direction="rightwards")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,290),
direction="rightwards")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,390),
direction="rightwards")
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
ylim = c(0,300),
direction="rightwards")
pdf('Saxifragaceae.pdf',width=6,height=4,paper='special')
dev.off()
pdf('Saxifragaceae.pdf',width=6,height=10,paper='special')
sim2 = read.simmap(file=character_file, format="phylip")
#label_fn = paste("state_labels.csv", sep=",")
color_fn = paste("range_colors.csv")
range_color_list = read.csv(color_fn, header=T, sep=",", colClasses="character")
#range_colors = range_color_list$color[ match(range_color_list$range, range_labels) ]
#range_labels = setNames(range_color_list$range,range_color_list$state)
#> range_labels
#10   01   11
#"A"  "N" "AN"
################################################
#names(summary(sim2))
colors = vector()
for (i in 1:length( sim2$maps ) ) {
colors = c(colors, names(sim2$maps[[i]]) )
}
colors = sort(as.numeric(unique(colors)))
#cols = setNames(rainbow_hcl(length(colors)), colors)
#cols = setNames( rainbow(length(colors), start=0.0, end=0.9), colors)
#cols = setNames( range_color_list$color[1:22], colors)
col=vector()
for (i in colors){
col=c(col,range_color_list$color[i])
}
cols = setNames( col, colors)
ranges = vector()
for (i in colors){
ranges =c(ranges,range_color_list$range[i] )
}
areas= setNames( ranges,colors)
#X<-read.csv("elopomorph.csv",row.names=1)
#feed.mode<-setNames(X[,1],rownames(X))
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#           ylim = c(0,300),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
#if (write_pdf) {
#    dev.off()
#}
axisPhylo(side=1,las = 1,ask = FALSE,
lwd = .1,
#          cex = 0.01, font = .01,
col = "black",pos=c(0,0)) # plots timescale
title("Saxifragaceae")
dev.off()
pdf('Saxifragaceae.pdf',width=6,height=10,paper='special')
sim2 = read.simmap(file=character_file, format="phylip")
#label_fn = paste("state_labels.csv", sep=",")
color_fn = paste("range_colors.csv")
range_color_list = read.csv(color_fn, header=T, sep=",", colClasses="character")
#range_colors = range_color_list$color[ match(range_color_list$range, range_labels) ]
#range_labels = setNames(range_color_list$range,range_color_list$state)
#> range_labels
#10   01   11
#"A"  "N" "AN"
################################################
#names(summary(sim2))
colors = vector()
for (i in 1:length( sim2$maps ) ) {
colors = c(colors, names(sim2$maps[[i]]) )
}
colors = sort(as.numeric(unique(colors)))
#cols = setNames(rainbow_hcl(length(colors)), colors)
#cols = setNames( rainbow(length(colors), start=0.0, end=0.9), colors)
#cols = setNames( range_color_list$color[1:22], colors)
col=vector()
for (i in colors){
col=c(col,range_color_list$color[i])
}
cols = setNames( col, colors)
ranges = vector()
for (i in colors){
ranges =c(ranges,range_color_list$range[i] )
}
areas= setNames( ranges,colors)
#X<-read.csv("elopomorph.csv",row.names=1)
#feed.mode<-setNames(X[,1],rownames(X))
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#           ylim = c(0,300),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=T,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=15,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=0,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=100,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=0,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=10,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=-10,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=-20,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=-30,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
pdf('Saxifragaceae.pdf',width=6,height=10,paper='special')
sim2 = read.simmap(file=character_file, format="phylip")
#label_fn = paste("state_labels.csv", sep=",")
color_fn = paste("range_colors.csv")
range_color_list = read.csv(color_fn, header=T, sep=",", colClasses="character")
#range_colors = range_color_list$color[ match(range_color_list$range, range_labels) ]
#range_labels = setNames(range_color_list$range,range_color_list$state)
#> range_labels
#10   01   11
#"A"  "N" "AN"
################################################
#names(summary(sim2))
colors = vector()
for (i in 1:length( sim2$maps ) ) {
colors = c(colors, names(sim2$maps[[i]]) )
}
colors = sort(as.numeric(unique(colors)))
#cols = setNames(rainbow_hcl(length(colors)), colors)
#cols = setNames( rainbow(length(colors), start=0.0, end=0.9), colors)
#cols = setNames( range_color_list$color[1:22], colors)
col=vector()
for (i in colors){
col=c(col,range_color_list$color[i])
}
cols = setNames( col, colors)
ranges = vector()
for (i in colors){
ranges =c(ranges,range_color_list$range[i] )
}
areas= setNames( ranges,colors)
#X<-read.csv("elopomorph.csv",row.names=1)
#feed.mode<-setNames(X[,1],rownames(X))
plotSimmap(sim2,cols,
fsize=.1, lwd=1, split.vertical=F, ftype="i",mar =  c(2,0,1,0),
xlim=c(-30,120),
#           ylim = c(0,300),
direction="rightwards")
#help(plotSimmap)
#mar =  c(4,8,1,0.1) is clockwise, 4:bottom; 8:left; 1:up; 0.1:right
#??plottree
# add legend
add.simmap.legend(x=-30,y=300,leg = ranges, prompt=F,colors=cols,shape="circle",fsize= .5)
